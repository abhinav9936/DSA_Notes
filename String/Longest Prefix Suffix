Given a string of characters, find the length of the longest proper prefix which is also a proper suffix.

NOTE: Prefix and suffix can be overlapping but they should not be equal to the entire string

int lps(string s) {
	    // Your code goes here
	    int n = s.size();
	    int suffix = 1;
	    int prefix = 0;
	    vector<int> lps(n, 0);
	    while(suffix < n)
	    {
	        if(s[suffix] == s[prefix])
	        {
	            lps[suffix] = prefix + 1;
	            suffix++; prefix++;
	        }
	        else
	        {
	            if(prefix == 0)
	                suffix++;
	            else
	            {
	                prefix = lps[prefix - 1];
	            }
	        }
	    }
	    return lps[n-1];
	}
