class Solution
{
	public:
	//Function to find the shortest distance of all the vertices
    //from the source vertex S.
    vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        // Code here
        int n = V;
        vector<int> d(n , INT_MAX);
        d[S] = 0;
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        pq.push({0, S});
        while(!pq.empty())
        {
            int u = pq.top().second;
            int wt = pq.top().first;
            pq.pop();
            
            for(auto it: adj[u])
            {
                int v = it[0];
                int dist = it[1];
                if(wt + dist < d[v])
                {
                    d[v] = wt + dist;
                    pq.push({d[v], v});
                }
            }
        }
        return d;
    }
};
