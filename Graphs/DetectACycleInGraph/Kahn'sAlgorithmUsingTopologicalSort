**Used for Directed Graph**

Using Kahn Algorithm count the number of elements in the topo sort
If the elements are less than the total number of vertices, then there is a cycle.


bool topSortBFS(int V, vector<int> adj[])
    {
        int inDeg[V] = {0};
        for(int i = 0; i<V; i++)
        {
            for(auto it: adj[i])
            {
                inDeg[it]++;
            }
        }
        queue<int> q;
        int cnt=0;
        for(int i = 0; i<V; i++)
        {
            if(inDeg[i] == 0)
                q.push(i);
        }
        
        while(!q.empty())
        {
            int node = q.front();
            q.pop();
            cnt++;
            
            for(auto it: adj[node])
            {
                inDeg[it]--;
                if(inDeg[it] == 0)
                    q.push(it);
            }
        }
        return !(cnt == V);
    }
